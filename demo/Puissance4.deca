#include "Math.decah"

class Couleur {
    boolean estRouge() {
        return false;
    }
    boolean estJaune() {
        return false;
    }

    void afficherCouleur(){
        print("e ");
    }
}

class Rouge extends Couleur {
    boolean estRouge() {
        return true;
    }

    void afficherCouleur(){
        print("🔴|");
    }
}

class Jaune extends Couleur {
    boolean estJaune() {
        return true;
    }

    void afficherCouleur(){
        print("🟡|");
    }
}

class Case {
    int x, y;
    void construire(int x, int y) {
        this.x = x;
        this.y = y;
    }

    Couleur couleur = null;

    void remplir(Couleur c) {
        this.couleur = c;
    }

    boolean estVide() {
        if (this.couleur == null) {
            return true;
        }
        else {
            return false;
        }
    }

    void afficherCase(){
        if(!this.estVide()){
            print("o ");
        }
        else { this.couleur.afficherCouleur(); }
    }
}

class Grille {
    Case A1, A2, A3, A4, A5, A6, B1, B2, B3, B4, B5, B6, C1, C2, C3, C4, C5, C6, D1, D2, D3, D4, D5, D6, E1, E2, E3, E4, E5, E6, F1, F2, F3, F4, F5, F6, G1, G2, G3, G4, G5, G6;

    Jaune jaune = new Jaune();
    Rouge rouge = new Rouge();

    Case getCaseByCoords(int x, int y) {
        if (x == 1 && y == 1) {return A1;}
        if (x == 1 && y == 2) {return A2;}
        if (x == 1 && y == 3) {return A3;}
        if (x == 1 && y == 4) {return A4;}
        if (x == 1 && y == 5) {return A5;}
        if (x == 1 && y == 6) {return A6;}
        if (x == 2 && y == 1) {return B1;}
        if (x == 2 && y == 2) {return B2;}
        if (x == 2 && y == 3) {return B3;}
        if (x == 2 && y == 4) {return B4;}
        if (x == 2 && y == 5) {return B5;}
        if (x == 2 && y == 6) {return B6;}
        if (x == 3 && y == 1) {return C1;}
        if (x == 3 && y == 2) {return C2;}
        if (x == 3 && y == 3) {return C3;}
        if (x == 3 && y == 4) {return C4;}
        if (x == 3 && y == 5) {return C5;}
        if (x == 3 && y == 6) {return C6;}
        if (x == 4 && y == 1) {return D1;}
        if (x == 4 && y == 2) {return D2;}
        if (x == 4 && y == 3) {return D3;}
        if (x == 4 && y == 4) {return D4;}
        if (x == 4 && y == 5) {return D5;}
        if (x == 4 && y == 6) {return D6;}
        if (x == 5 && y == 1) {return E1;}
        if (x == 5 && y == 2) {return E2;}
        if (x == 5 && y == 3) {return E3;}
        if (x == 5 && y == 4) {return E4;}
        if (x == 5 && y == 5) {return E5;}
        if (x == 5 && y == 6) {return E6;}
        if (x == 6 && y == 1) {return F1;}
        if (x == 6 && y == 2) {return F2;}
        if (x == 6 && y == 3) {return F3;}
        if (x == 6 && y == 4) {return F4;}
        if (x == 6 && y == 5) {return F5;}
        if (x == 6 && y == 6) {return F6;}
        if (x == 7 && y == 1) {return G1;}
        if (x == 7 && y == 2) {return G2;}
        if (x == 7 && y == 3) {return G3;}
        if (x == 7 && y == 4) {return G4;}
        if (x == 7 && y == 5) {return G5;}
        if (x == 7 && y == 6) {return G6;}
        return null;
    }

    void setCaseByCoords(int x, int y, Case case) {
        if (x == 1 && y == 1) {A1 = case;}
        if (x == 1 && y == 2) {A2 = case;}
        if (x == 1 && y == 3) {A3 = case;}
        if (x == 1 && y == 4) {A4 = case;}
        if (x == 1 && y == 5) {A5 = case;}
        if (x == 1 && y == 6) {A6 = case;}
        if (x == 2 && y == 1) {B1 = case;}
        if (x == 2 && y == 2) {B2 = case;}
        if (x == 2 && y == 3) {B3 = case;}
        if (x == 2 && y == 4) {B4 = case;}
        if (x == 2 && y == 5) {B5 = case;}
        if (x == 2 && y == 6) {B6 = case;}
        if (x == 3 && y == 1) {C1 = case;}
        if (x == 3 && y == 2) {C2 = case;}
        if (x == 3 && y == 3) {C3 = case;}
        if (x == 3 && y == 4) {C4 = case;}
        if (x == 3 && y == 5) {C5 = case;}
        if (x == 3 && y == 6) {C6 = case;}
        if (x == 4 && y == 1) {D1 = case;}
        if (x == 4 && y == 2) {D2 = case;}
        if (x == 4 && y == 3) {D3 = case;}
        if (x == 4 && y == 4) {D4 = case;}
        if (x == 4 && y == 5) {D5 = case;}
        if (x == 4 && y == 6) {D6 = case;}
        if (x == 5 && y == 1) {E1 = case;}
        if (x == 5 && y == 2) {E2 = case;}
        if (x == 5 && y == 3) {E3 = case;}
        if (x == 5 && y == 4) {E4 = case;}
        if (x == 5 && y == 5) {E5 = case;}
        if (x == 5 && y == 6) {E6 = case;}
        if (x == 6 && y == 1) {F1 = case;}
        if (x == 6 && y == 2) {F2 = case;}
        if (x == 6 && y == 3) {F3 = case;}
        if (x == 6 && y == 4) {F4 = case;}
        if (x == 6 && y == 5) {F5 = case;}
        if (x == 6 && y == 6) {F6 = case;}
        if (x == 7 && y == 1) {G1 = case;}
        if (x == 7 && y == 2) {G2 = case;}
        if (x == 7 && y == 3) {G3 = case;}
        if (x == 7 && y == 4) {G4 = case;}
        if (x == 7 && y == 5) {G5 = case;}
        if (x == 7 && y == 6) {G6 = case;}
    }

    int colASize = 1;
    int colBSize = 1;
    int colCSize = 1;
    int colDSize = 1;
    int colESize = 1;
    int colFSize = 1;
    int colGSize = 1;

    int incrementCol(int col) {
        if (col == 1) { if (colASize < 7) { colASize = colASize + 1; return colASize - 1;} }
        else if (col == 2) {if (colBSize < 7) {colBSize = colBSize + 1; return colBSize - 1;}}
        else if (col == 3) {if (colCSize < 7) {colCSize = colCSize + 1; return colCSize - 1;}}
        else if (col == 4) {if (colDSize < 7) {colDSize = colDSize + 1; return colDSize - 1;}}
        else if (col == 5) {if (colESize < 7) {colESize = colESize + 1; return colESize - 1;}}
        else if (col == 6) {if (colFSize < 7) {colFSize = colFSize + 1; return colFSize - 1;}}
        else if (col == 7) {if (colGSize < 7) {colGSize = colGSize + 1; return colGSize - 1;}}
        return -1;
    }

    Couleur chercheVictoire() {
        int i = 1;
        int j = 1;
        while (i <= 7) {
            j = 0;
            while (j <= 6) {
                // vertical
                if (this.getCaseByCoords(i, j) != null
                && this.getCaseByCoords(i, j + 1) != null
                && this.getCaseByCoords(i, j + 2) != null
                && this.getCaseByCoords(i, j + 3) != null
                && this.getCaseByCoords(i, j).couleur.equals(this.getCaseByCoords(i, j + 1).couleur)
                && this.getCaseByCoords(i, j).couleur.equals(this.getCaseByCoords(i, j + 2).couleur)
                && this.getCaseByCoords(i, j).couleur.equals(this.getCaseByCoords(i, j + 3).couleur)) {
                    return this.getCaseByCoords(i, j).couleur;
                }
                // horizontal
                if (this.getCaseByCoords(i, j) != null
                && this.getCaseByCoords(i + 1, j) != null
                && this.getCaseByCoords(i + 2, j) != null
                && this.getCaseByCoords(i + 3, j) != null
                && this.getCaseByCoords(i, j).couleur.equals(this.getCaseByCoords(i + 1, j).couleur)
                && this.getCaseByCoords(i, j).couleur.equals(this.getCaseByCoords(i + 2, j).couleur)
                && this.getCaseByCoords(i, j).couleur.equals(this.getCaseByCoords(i + 3, j).couleur)) {
                    return this.getCaseByCoords(i, j).couleur;
                }
                // diagonale haut droite
                if (this.getCaseByCoords(i, j) != null
                && this.getCaseByCoords(i + 1, j + 1) != null
                && this.getCaseByCoords(i + 2, j + 2) != null
                && this.getCaseByCoords(i + 3, j + 3) != null
                && this.getCaseByCoords(i, j).couleur.equals(this.getCaseByCoords(i + 1, j + 1).couleur)
                && this.getCaseByCoords(i, j).couleur.equals(this.getCaseByCoords(i + 2, j + 2).couleur)
                && this.getCaseByCoords(i, j).couleur.equals(this.getCaseByCoords(i + 3, j + 3).couleur)) {
                    return this.getCaseByCoords(i, j).couleur;
                }
                // diagonale haut gauche
                if (this.getCaseByCoords(i, j) != null
                && this.getCaseByCoords(i - 1, j + 1) != null
                && this.getCaseByCoords(i - 2, j + 2) != null
                && this.getCaseByCoords(i - 3, j + 3) != null
                && this.getCaseByCoords(i, j).couleur.equals(this.getCaseByCoords(i - 1, j + 1).couleur)
                && this.getCaseByCoords(i, j).couleur.equals(this.getCaseByCoords(i - 2, j + 2).couleur)
                && this.getCaseByCoords(i, j).couleur.equals(this.getCaseByCoords(i - 3, j + 3).couleur)) {
                    return this.getCaseByCoords(i, j).couleur;
                }
                j = j + 1;
            }
            i = i + 1;
        }
        return null;
    }

    boolean ajouterJeton(int col, Couleur c) {
        int lig = incrementCol(col);
        Case case = new Case();
        Case caseGrille;
        case.remplir(c);
        case.construire(col,lig);
        if (lig != -1) {
            this.setCaseByCoords(col, lig, case);
            return true;
        }
        return false;
    }

    void afficherGrille(){
        int col = 1;
        int lig = 6;
        Case caseCourante;

        while(lig > 0){
            while(col <= 7){
                if(col == 1){
                    print("|");
                }
                if((caseCourante = this.getCaseByCoords(col, lig)) == null){
                    print("🔘|");
                }
                else {
                    caseCourante.afficherCase();
                }
            col = col + 1;
            }
            lig = lig - 1;
            println();
            col = 1;
        }
        println(" 1️⃣  2️⃣  3️⃣  4️⃣  5️⃣  6️⃣  7️⃣");
    }
}
{
    Grille grille = new Grille();
    int colJouee;
    int tour = 1;
    Couleur couleur;
    boolean jetonAjoute;
    
    while (grille.chercheVictoire() == null && tour <= 42) {
        grille.afficherGrille();
        if (tour % 2 == 1) {
            println("Joueur 1 (Jaune), à vous de jouer !");
        }
        else {
            println("Joueur 2 (Rouge), à vous de jouer !");
        }
        colJouee = -1;
        print("Colonne jouée : ");
        while ((colJouee = readInt()) < 1 || colJouee > 7) {
            println("Veuillez entrer un nombre entre 1 et 7");
        }

        if (tour % 2 == 1) {
            couleur = grille.jaune;
        } else {
            couleur = grille.rouge;
        }
        
        jetonAjoute = grille.ajouterJeton(colJouee, couleur);
        if(!jetonAjoute){
            println("Colonne pleine, jouez une autre colonne.");
            tour = tour - 1;
        }
  
        tour = tour + 1;
    }
    grille.afficherGrille();
    println("Partie finie au tour ", tour - 1);
    if (tour >= 42) {
        println("Égalité !");
    } else if (couleur instanceof Jaune) {
        println("Jaune a gagné !");
    } else if (couleur instanceof Rouge) {
        println("Rouge a gagné !");
    } 
}